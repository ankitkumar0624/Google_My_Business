background{
   /*we apply any element have width and height*/
   background-color: var( --background-color);
   background-image: url(" ");/*url is a function*/
   background-position: top right;
   background-repeat: no-repeat;
   background-size: 500px 700px;
   background-attachment: scroll; 
   background-image: linear-gradient(90 degre ,green ,orange);
   background-image:radial-gradient(red 30%,green 20% ,blue 50%) ;
   overflow: auto/hidden/scroll;
   resize: both;

   box-sizing: border-box/content-box;

   box-shadow: 20px(hori) 20px(verti) 20px(blur) 20px(spread blur) orange;
}

color{
   color: rgb/rgba/hsl;
   /*there are total 140 color
   but rgb in decimal have value from 0 to 255 and that in hexadecimal 
   have value from 00 to ff*/
}

border{
   border-style: outset/inset/dotted/ridge/solid;
   border-width: 5px;
   border-color: orange;
   border-radius: 2px;/*generally 2px assign to all
   top-right-bottom-left*/.
}

dimension{
   width: auto;
   height: auto;
   max-width: fit-content;
   max-height: fit-content;
   min-width: none;
   min-height: auto;
}

padding{
   /*its a separation between border and content*/
   padding: 5px;
}

margin{
   margin: 20px;
}

units{
   border-style: dashed;
   /*
em:its always related to parent 2em means two timew of parents
rem:its always related to its root element(html tag)
vw/vh:always related to browser size (vw=view width ,vh=view height)
1 inch=96px ,1 inch=72pt
   */
}

link{
   text-decoration: none;
   display: inline-block;
   transform: translate(20px ,20px)/rotate(20degree);
}
a{
   display: inline-block;
   text-decoration: none;
}
a:visited{
   color: red;
}
a:hover{
   color:orange;
}
a:active{
   color:blue;
}

text{
   text-align: justify;
   text-decoration: none;
   text-indent: 3px;
   word-wrap: normal;
   word-break: normal;
   text-shadow: 2px 2px 7px chocolate;
   text-transform: capitalize/lowercase/uppercase;
}

font{
   font-size: 20px;
   font-weight: 100-900/bolder/normal;
   font-style: italic;
   font-family: 'Courier New', Courier, monospace;
}

important{
   color: aliceblue;
   /*while using this keyword we remove the priority order of inline ,internal,
   external*
   -->>!important*/
}

cursor{
   cursor:grab/help/progress/zoom-in/;
}

boxshadow{
   box-shadow: 20px(hori) 20px(verti) 20px(blur) 20px(spread blur) orange;
}

opacity{
   opacity: 0.7;
   /*if you want something to be transparent*/
}

list{
   list-style-type: disc;
   list-style-position: inside;/*its work in or out from border*/
   list-style-image: none;
}

table{
   table-layout: auto;
   border-spacing: 5px;
   border-collapse: collapse;
}

:root{
   --background-color:blue;
   --button-color:violet;
   --text-color:white;
}


/* 
in css 
we have function like url(),linear-gradient() ,calc() ,var()
*/

object{
   /*used for any image*/
   border: 1px solid red;
   width: 500px;
   height: 200px;
   object-fit: contain;
   object-position: top right;
}
::selection{
   color:red;
   background-color: aqua;
}

p::first-letter/first-line{
   font-size: 20px;
   color: red;
}


/*

block element-->full width ,new line ,custom height/width;
eg:div ,p ,h1;

inline element:no new line ,no full width , no custom heigth/width
eg:a,img;

display property:inline/inline-block;
*/

/*
poistion-->static(default) ,relative ,absolute ,fixed;
relative:its always start its position relative to its position and never leaves its space;
absolute:its always dtart its position relative to position parent otherwise take position from body parent;
fixed:its same as absolute;
*/
display{
   display: inline-block;
}


position{
   position: absolute;
   position: relative;
   position:fixed;
   top:50px;
   left:50px;
}

layer{
   z-index: 3/2/1;
}

/*
we use float property to make navigation bar;
always keep remind tha we have to use overflow property to make sure 
our child not go out of the parent;
*/

float{
   overflow: hidden;
   float:left;
   clear:both;
}  


transform{
   transform: none;
   display: inline-block;
}

transition{
   transition-duration: 2s;
   transition-property: var(--background-color) /width/height;
}

@keyframes animated {
   from{background-color: yellow;}
   to{background-color: blue;}
}

animation{
   background-color: yellow;
   animation-name: animated;
   animation-duration: 5s;
   animation-delay: 5s;
}


responsive{
   /*
   add in head tag
   <meta name="viewport" content="width=device-width, intial-scale=1.0"> 
   */
   color: orange;
}


flexparent{
display: flex;
flex-flow: row wrap;
justify-content: flex-start;
align-items:flex-start ;
}

flexchild{
   background-color: ;
   text-align: ;
   padding: ;
   margin: ;
}


